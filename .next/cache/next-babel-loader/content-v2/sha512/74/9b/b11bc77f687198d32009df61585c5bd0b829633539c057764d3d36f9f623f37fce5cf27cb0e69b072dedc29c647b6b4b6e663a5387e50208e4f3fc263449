{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brian/Desktop/nextjs-preview/02-basics2/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport Head from 'next/head';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  // const { image, title, address, description } = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/brian/Desktop/nextjs-preview/02-basics2/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","MeetupDetails","props","meetupData","title","description","image","address"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAChC;AACA,sBACC;AAAA,4BACC,QAAC,IAAD;AAAA,8BACC;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADD,eAEC;AACC,QAAA,IAAI,EAAC,aADN;AAEC,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAF3B;AAAA;AAAA;AAAA;AAAA,eAFD;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAQC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KADzB;AAEC,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBC,KAFzB;AAGC,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBI,OAH3B;AAIC,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJ/B;AAAA;AAAA;AAAA;AAAA,aARD;AAAA,kBADD;AAiBA,CAnBD;;KAAMJ,a;;AA0EN,eAAeA,aAAf","sourcesContent":["import Head from 'next/head';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = (props) => {\n\t// const { image, title, address, description } = props.meetupData;\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>{props.meetupData.title}</title>\n\t\t\t\t<meta\n\t\t\t\t\tname='description'\n\t\t\t\t\tcontent={props.meetupData.description}\n\t\t\t\t/>\n\t\t\t</Head>\n\t\t\t<MeetupDetail\n\t\t\t\timage={props.meetupData.image}\n\t\t\t\ttitle={props.meetupData.title}\n\t\t\t\taddress={props.meetupData.address}\n\t\t\t\tdescription={props.meetupData.description}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://root:root@cluster0.03em7.mongodb.net/meetups'\n\t);\n\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection('meetups');\n\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map((meetup) => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t};\n}\n\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetup\n\n\tconst meetupId = context.params.meetupId;\n\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://root:root@cluster0.03em7.mongodb.net/meetups'\n\t);\n\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection('meetups');\n\n\tconst selectedMeetup = await meetupsCollection.findOne({\n\t\t_id: ObjectId(meetupId),\n\t});\n\n\tclient.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\tid: selectedMeetup._id.toString(),\n\t\t\t\ttitle: selectedMeetup.title,\n\t\t\t\timage: selectedMeetup.image,\n\t\t\t\taddress: selectedMeetup.address,\n\t\t\t\tdescription: selectedMeetup.description,\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}