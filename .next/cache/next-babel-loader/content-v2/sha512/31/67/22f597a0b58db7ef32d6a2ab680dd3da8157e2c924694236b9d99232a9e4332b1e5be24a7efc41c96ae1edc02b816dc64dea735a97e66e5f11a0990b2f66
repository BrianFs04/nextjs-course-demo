{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brian/Desktop/nextjs-preview/02-basics2/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  console.log(props.meetupData); // const { image, title, address, description } = props.meetupData;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ok\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false) // <MeetupDetail\n  // \timage={image}\n  // \ttitle={title}\n  // \taddress={address}\n  // \tdescription={description}\n  // />\n  ;\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/brian/Desktop/nextjs-preview/02-basics2/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","console","log","meetupData"],"mappings":";;;;;;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB,EADgC,CAEhC;;AACA,sBACC;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,mBADD,CAIC;AACA;AACA;AACA;AACA;AACA;AATD;AAWA,CAdD;;KAAMJ,a;;AA6DN,eAAeA,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = (props) => {\n\tconsole.log(props.meetupData);\n\t// const { image, title, address, description } = props.meetupData;\n\treturn (\n\t\t<>\n\t\t\t<h1>Ok</h1>\n\t\t</>\n\t\t// <MeetupDetail\n\t\t// \timage={image}\n\t\t// \ttitle={title}\n\t\t// \taddress={address}\n\t\t// \tdescription={description}\n\t\t// />\n\t);\n};\n\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://root:root@cluster0.03em7.mongodb.net/meetups'\n\t);\n\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection('meetups');\n\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map((meetup) => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t};\n}\n\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetup\n\n\tconst meetupId = context.params.meetupId;\n\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://root:root@cluster0.03em7.mongodb.net/meetups'\n\t);\n\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection('meetups');\n\n\tconst selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\n\n\tclient.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: selectedMeetup,\n\t\t},\n\t};\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}