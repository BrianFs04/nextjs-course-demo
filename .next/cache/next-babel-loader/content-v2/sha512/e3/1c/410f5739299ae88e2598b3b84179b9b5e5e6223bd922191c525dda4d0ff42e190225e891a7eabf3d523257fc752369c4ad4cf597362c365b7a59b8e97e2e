{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brian/Desktop/nextjs-preview/02-basics2/pages/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'First meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 5, 12345 Some City',\n  description: 'This is a first meetup'\n}, {\n  id: 'm2',\n  title: 'Second meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 10, 12345 Some City',\n  description: 'This is a second meetup'\n}];\n\nconst Homepage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}; // export async function getServerSideProps(context) {\n// \tconst req = context.req;\n// \tconst res = context.res;\n// \t// fetch data from an API\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS,\n// \t\t},\n// \t};\n// }\n\n\nexport async function getStaticProps() {\n  // Fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://root:root@cluster0.03em7.mongodb.net/meetups');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => {\n        return {\n          key: meetup.id,\n          title: meetup.title,\n          address: meetup.address,\n          image: meetup.image\n        };\n      })\n    },\n    revalidate: 1\n  };\n}\nexport default Homepage;","map":{"version":3,"sources":["/Users/brian/Desktop/nextjs-preview/02-basics2/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","Homepage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","key","revalidate"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACrB;AACCC,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,cAFR;AAGCC,EAAAA,KAAK,EAAE,wHAHR;AAICC,EAAAA,OAAO,EAAE,iCAJV;AAKCC,EAAAA,WAAW,EAAE;AALd,CADqB,EAQrB;AACCJ,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,eAFR;AAGCC,EAAAA,KAAK,EAAE,wHAHR;AAICC,EAAAA,OAAO,EAAE,kCAJV;AAKCC,EAAAA,WAAW,EAAE;AALd,CARqB,CAAtB;;AAiBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC3B,sBACC;AAAA,2BACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAKA,CAND,C,CAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACtC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACpB,4DADoB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACNV,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,IAAY;AAChC,eAAO;AACNC,UAAAA,GAAG,EAAED,MAAM,CAAClB,EADN;AAENC,UAAAA,KAAK,EAAEiB,MAAM,CAACjB,KAFR;AAGNE,UAAAA,OAAO,EAAEe,MAAM,CAACf,OAHV;AAIND,UAAAA,KAAK,EAAEgB,MAAM,CAAChB;AAJR,SAAP;AAMA,OAPQ;AADH,KADD;AAWNkB,IAAAA,UAAU,EAAE;AAXN,GAAP;AAaA;AAED,eAAef,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst DUMMY_MEETUPS = [\n\t{\n\t\tid: 'm1',\n\t\ttitle: 'First meetup',\n\t\timage: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n\t\taddress: 'Some address 5, 12345 Some City',\n\t\tdescription: 'This is a first meetup',\n\t},\n\t{\n\t\tid: 'm2',\n\t\ttitle: 'Second meetup',\n\t\timage: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n\t\taddress: 'Some address 10, 12345 Some City',\n\t\tdescription: 'This is a second meetup',\n\t},\n];\n\nconst Homepage = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<MeetupList meetups={props.meetups} />\n\t\t</>\n\t);\n};\n\n// export async function getServerSideProps(context) {\n// \tconst req = context.req;\n// \tconst res = context.res;\n\n// \t// fetch data from an API\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS,\n// \t\t},\n// \t};\n// }\n\nexport async function getStaticProps() {\n\t// Fetch data from an API\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://root:root@cluster0.03em7.mongodb.net/meetups'\n\t);\n\n\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection('meetups');\n\n\tconst meetups = await meetupsCollection.find().toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetups: meetups.map((meetup) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: meetup.id,\n\t\t\t\t\ttitle: meetup.title,\n\t\t\t\t\taddress: meetup.address,\n\t\t\t\t\timage: meetup.image,\n\t\t\t\t};\n\t\t\t}),\n\t\t},\n\t\trevalidate: 1,\n\t};\n}\n\nexport default Homepage;\n"]},"metadata":{},"sourceType":"module"}